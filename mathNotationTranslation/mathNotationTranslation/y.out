Terminals unused in grammar

   MUL
   SUB
   DIV
   LROOT
   RROT
   LSQRT
   RSQRT
   LSUP
   RSUP


State 27 conflicts: 1 shift/reduce
State 28 conflicts: 1 shift/reduce


Grammar

    0 $accept: list $end

    1 list: stm
    2     | list stm

    3 stm: LNUM stm RNUM
    4    | LID stm RID
    5    | LFRAC LROW list RROW LROW list RROW RFRAC
    6    | LROW list RROW
    7    | binop
    8    | NUMBER
    9    | ID

   10 binop: stm LOPER ADD ROPER stm
   11      | stm LOPER EQ ROPER stm


Terminals, with rules where they appear

$end (0) 0
error (256)
NUMBER (258) 8
ID (259) 9
ADD (260) 10
MUL (261)
SUB (262)
DIV (263)
EQ (264) 11
LOPER (265) 10 11
ROPER (266) 10 11
LNUM (267) 3
RNUM (268) 3
LID (269) 4
RID (270) 4
LROW (271) 5 6
RROW (272) 5 6
LROOT (273)
RROT (274)
LFRAC (275) 5
RFRAC (276) 5
LSQRT (277)
RSQRT (278)
LSUP (279)
RSUP (280)


Nonterminals, with rules where they appear

$accept (26)
    on left: 0
list (27)
    on left: 1 2, on right: 0 2 5 6
stm (28)
    on left: 3 4 5 6 7 8 9, on right: 1 2 3 4 10 11
binop (29)
    on left: 10 11, on right: 7


state 0

    0 $accept: . list $end
    1 list: . stm
    2     | . list stm
    3 stm: . LNUM stm RNUM
    4    | . LID stm RID
    5    | . LFRAC LROW list RROW LROW list RROW RFRAC
    6    | . LROW list RROW
    7    | . binop
    8    | . NUMBER
    9    | . ID
   10 binop: . stm LOPER ADD ROPER stm
   11      | . stm LOPER EQ ROPER stm

    NUMBER  shift, and go to state 1
    ID      shift, and go to state 2
    LNUM    shift, and go to state 3
    LID     shift, and go to state 4
    LROW    shift, and go to state 5
    LFRAC   shift, and go to state 6

    list   go to state 7
    stm    go to state 8
    binop  go to state 9


state 1

    8 stm: NUMBER .

    $default  reduce using rule 8 (stm)


state 2

    9 stm: ID .

    $default  reduce using rule 9 (stm)


state 3

    3 stm: . LNUM stm RNUM
    3    | LNUM . stm RNUM
    4    | . LID stm RID
    5    | . LFRAC LROW list RROW LROW list RROW RFRAC
    6    | . LROW list RROW
    7    | . binop
    8    | . NUMBER
    9    | . ID
   10 binop: . stm LOPER ADD ROPER stm
   11      | . stm LOPER EQ ROPER stm

    NUMBER  shift, and go to state 1
    ID      shift, and go to state 2
    LNUM    shift, and go to state 3
    LID     shift, and go to state 4
    LROW    shift, and go to state 5
    LFRAC   shift, and go to state 6

    stm    go to state 10
    binop  go to state 9


state 4

    3 stm: . LNUM stm RNUM
    4    | . LID stm RID
    4    | LID . stm RID
    5    | . LFRAC LROW list RROW LROW list RROW RFRAC
    6    | . LROW list RROW
    7    | . binop
    8    | . NUMBER
    9    | . ID
   10 binop: . stm LOPER ADD ROPER stm
   11      | . stm LOPER EQ ROPER stm

    NUMBER  shift, and go to state 1
    ID      shift, and go to state 2
    LNUM    shift, and go to state 3
    LID     shift, and go to state 4
    LROW    shift, and go to state 5
    LFRAC   shift, and go to state 6

    stm    go to state 11
    binop  go to state 9


state 5

    1 list: . stm
    2     | . list stm
    3 stm: . LNUM stm RNUM
    4    | . LID stm RID
    5    | . LFRAC LROW list RROW LROW list RROW RFRAC
    6    | . LROW list RROW
    6    | LROW . list RROW
    7    | . binop
    8    | . NUMBER
    9    | . ID
   10 binop: . stm LOPER ADD ROPER stm
   11      | . stm LOPER EQ ROPER stm

    NUMBER  shift, and go to state 1
    ID      shift, and go to state 2
    LNUM    shift, and go to state 3
    LID     shift, and go to state 4
    LROW    shift, and go to state 5
    LFRAC   shift, and go to state 6

    list   go to state 12
    stm    go to state 8
    binop  go to state 9


state 6

    5 stm: LFRAC . LROW list RROW LROW list RROW RFRAC

    LROW  shift, and go to state 13


state 7

    0 $accept: list . $end
    2 list: list . stm
    3 stm: . LNUM stm RNUM
    4    | . LID stm RID
    5    | . LFRAC LROW list RROW LROW list RROW RFRAC
    6    | . LROW list RROW
    7    | . binop
    8    | . NUMBER
    9    | . ID
   10 binop: . stm LOPER ADD ROPER stm
   11      | . stm LOPER EQ ROPER stm

    $end    shift, and go to state 14
    NUMBER  shift, and go to state 1
    ID      shift, and go to state 2
    LNUM    shift, and go to state 3
    LID     shift, and go to state 4
    LROW    shift, and go to state 5
    LFRAC   shift, and go to state 6

    stm    go to state 15
    binop  go to state 9


state 8

    1 list: stm .  [$end, NUMBER, ID, LNUM, LID, LROW, RROW, LFRAC]
   10 binop: stm . LOPER ADD ROPER stm
   11      | stm . LOPER EQ ROPER stm

    LOPER  shift, and go to state 16

    $default  reduce using rule 1 (list)


state 9

    7 stm: binop .

    $default  reduce using rule 7 (stm)


state 10

    3 stm: LNUM stm . RNUM
   10 binop: stm . LOPER ADD ROPER stm
   11      | stm . LOPER EQ ROPER stm

    LOPER  shift, and go to state 16
    RNUM   shift, and go to state 17


state 11

    4 stm: LID stm . RID
   10 binop: stm . LOPER ADD ROPER stm
   11      | stm . LOPER EQ ROPER stm

    LOPER  shift, and go to state 16
    RID    shift, and go to state 18


state 12

    2 list: list . stm
    3 stm: . LNUM stm RNUM
    4    | . LID stm RID
    5    | . LFRAC LROW list RROW LROW list RROW RFRAC
    6    | . LROW list RROW
    6    | LROW list . RROW
    7    | . binop
    8    | . NUMBER
    9    | . ID
   10 binop: . stm LOPER ADD ROPER stm
   11      | . stm LOPER EQ ROPER stm

    NUMBER  shift, and go to state 1
    ID      shift, and go to state 2
    LNUM    shift, and go to state 3
    LID     shift, and go to state 4
    LROW    shift, and go to state 5
    RROW    shift, and go to state 19
    LFRAC   shift, and go to state 6

    stm    go to state 15
    binop  go to state 9


state 13

    1 list: . stm
    2     | . list stm
    3 stm: . LNUM stm RNUM
    4    | . LID stm RID
    5    | . LFRAC LROW list RROW LROW list RROW RFRAC
    5    | LFRAC LROW . list RROW LROW list RROW RFRAC
    6    | . LROW list RROW
    7    | . binop
    8    | . NUMBER
    9    | . ID
   10 binop: . stm LOPER ADD ROPER stm
   11      | . stm LOPER EQ ROPER stm

    NUMBER  shift, and go to state 1
    ID      shift, and go to state 2
    LNUM    shift, and go to state 3
    LID     shift, and go to state 4
    LROW    shift, and go to state 5
    LFRAC   shift, and go to state 6

    list   go to state 20
    stm    go to state 8
    binop  go to state 9


state 14

    0 $accept: list $end .

    $default  accept


state 15

    2 list: list stm .  [$end, NUMBER, ID, LNUM, LID, LROW, RROW, LFRAC]
   10 binop: stm . LOPER ADD ROPER stm
   11      | stm . LOPER EQ ROPER stm

    LOPER  shift, and go to state 16

    $default  reduce using rule 2 (list)


state 16

   10 binop: stm LOPER . ADD ROPER stm
   11      | stm LOPER . EQ ROPER stm

    ADD  shift, and go to state 21
    EQ   shift, and go to state 22


state 17

    3 stm: LNUM stm RNUM .

    $default  reduce using rule 3 (stm)


state 18

    4 stm: LID stm RID .

    $default  reduce using rule 4 (stm)


state 19

    6 stm: LROW list RROW .

    $default  reduce using rule 6 (stm)


state 20

    2 list: list . stm
    3 stm: . LNUM stm RNUM
    4    | . LID stm RID
    5    | . LFRAC LROW list RROW LROW list RROW RFRAC
    5    | LFRAC LROW list . RROW LROW list RROW RFRAC
    6    | . LROW list RROW
    7    | . binop
    8    | . NUMBER
    9    | . ID
   10 binop: . stm LOPER ADD ROPER stm
   11      | . stm LOPER EQ ROPER stm

    NUMBER  shift, and go to state 1
    ID      shift, and go to state 2
    LNUM    shift, and go to state 3
    LID     shift, and go to state 4
    LROW    shift, and go to state 5
    RROW    shift, and go to state 23
    LFRAC   shift, and go to state 6

    stm    go to state 15
    binop  go to state 9


state 21

   10 binop: stm LOPER ADD . ROPER stm

    ROPER  shift, and go to state 24


state 22

   11 binop: stm LOPER EQ . ROPER stm

    ROPER  shift, and go to state 25


state 23

    5 stm: LFRAC LROW list RROW . LROW list RROW RFRAC

    LROW  shift, and go to state 26


state 24

    3 stm: . LNUM stm RNUM
    4    | . LID stm RID
    5    | . LFRAC LROW list RROW LROW list RROW RFRAC
    6    | . LROW list RROW
    7    | . binop
    8    | . NUMBER
    9    | . ID
   10 binop: . stm LOPER ADD ROPER stm
   10      | stm LOPER ADD ROPER . stm
   11      | . stm LOPER EQ ROPER stm

    NUMBER  shift, and go to state 1
    ID      shift, and go to state 2
    LNUM    shift, and go to state 3
    LID     shift, and go to state 4
    LROW    shift, and go to state 5
    LFRAC   shift, and go to state 6

    stm    go to state 27
    binop  go to state 9


state 25

    3 stm: . LNUM stm RNUM
    4    | . LID stm RID
    5    | . LFRAC LROW list RROW LROW list RROW RFRAC
    6    | . LROW list RROW
    7    | . binop
    8    | . NUMBER
    9    | . ID
   10 binop: . stm LOPER ADD ROPER stm
   11      | . stm LOPER EQ ROPER stm
   11      | stm LOPER EQ ROPER . stm

    NUMBER  shift, and go to state 1
    ID      shift, and go to state 2
    LNUM    shift, and go to state 3
    LID     shift, and go to state 4
    LROW    shift, and go to state 5
    LFRAC   shift, and go to state 6

    stm    go to state 28
    binop  go to state 9


state 26

    1 list: . stm
    2     | . list stm
    3 stm: . LNUM stm RNUM
    4    | . LID stm RID
    5    | . LFRAC LROW list RROW LROW list RROW RFRAC
    5    | LFRAC LROW list RROW LROW . list RROW RFRAC
    6    | . LROW list RROW
    7    | . binop
    8    | . NUMBER
    9    | . ID
   10 binop: . stm LOPER ADD ROPER stm
   11      | . stm LOPER EQ ROPER stm

    NUMBER  shift, and go to state 1
    ID      shift, and go to state 2
    LNUM    shift, and go to state 3
    LID     shift, and go to state 4
    LROW    shift, and go to state 5
    LFRAC   shift, and go to state 6

    list   go to state 29
    stm    go to state 8
    binop  go to state 9


state 27

   10 binop: stm . LOPER ADD ROPER stm
   10      | stm LOPER ADD ROPER stm .  [$end, NUMBER, ID, LOPER, LNUM, RNUM, LID, RID, LROW, RROW, LFRAC]
   11      | stm . LOPER EQ ROPER stm

    LOPER  shift, and go to state 16

    LOPER     [reduce using rule 10 (binop)]
    $default  reduce using rule 10 (binop)


state 28

   10 binop: stm . LOPER ADD ROPER stm
   11      | stm . LOPER EQ ROPER stm
   11      | stm LOPER EQ ROPER stm .  [$end, NUMBER, ID, LOPER, LNUM, RNUM, LID, RID, LROW, RROW, LFRAC]

    LOPER  shift, and go to state 16

    LOPER     [reduce using rule 11 (binop)]
    $default  reduce using rule 11 (binop)


state 29

    2 list: list . stm
    3 stm: . LNUM stm RNUM
    4    | . LID stm RID
    5    | . LFRAC LROW list RROW LROW list RROW RFRAC
    5    | LFRAC LROW list RROW LROW list . RROW RFRAC
    6    | . LROW list RROW
    7    | . binop
    8    | . NUMBER
    9    | . ID
   10 binop: . stm LOPER ADD ROPER stm
   11      | . stm LOPER EQ ROPER stm

    NUMBER  shift, and go to state 1
    ID      shift, and go to state 2
    LNUM    shift, and go to state 3
    LID     shift, and go to state 4
    LROW    shift, and go to state 5
    RROW    shift, and go to state 30
    LFRAC   shift, and go to state 6

    stm    go to state 15
    binop  go to state 9


state 30

    5 stm: LFRAC LROW list RROW LROW list RROW . RFRAC

    RFRAC  shift, and go to state 31


state 31

    5 stm: LFRAC LROW list RROW LROW list RROW RFRAC .

    $default  reduce using rule 5 (stm)
